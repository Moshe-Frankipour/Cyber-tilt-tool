{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\peri1\\\\Documents\\\\GitHub\\\\Cyber-tilt-tool\\\\frontend\\\\src\\\\EmailValidation.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EmailValidation() {\n  _s();\n  const [error = \"\", setError] = useState(\"\");\n  const navigate = useNavigate();\n  function handleClick(e) {\n    e.preventDefault();\n    let username = usernameRef.current.value;\n    let password = passwordRef.current.value;\n    if (username === \"\" || password === \"\") {\n      if (username === \"\") {\n        setError('Please Enter a Username');\n      } else {\n        setError('Please Enter a Password');\n      }\n    } else if (password.length < 10) {\n      setError('Please write a password with 10 letter or more');\n    } else {\n      // check the user in the db if exist do and write what if not\n      setError('');\n      navigate('/reports');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"emailValidationpanel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"litheader\",\n        children: \"Email Validation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inset\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            id: \"email\",\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-container\",\n        id: \"emailValidationError\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"p-container\",\n        id: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          children: \"Get Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(EmailValidation, \"mnCc4HmNqCJDL/aCK1+ZXTteIHM=\", false, function () {\n  return [useNavigate];\n});\n_c = EmailValidation;\nvar _c;\n$RefreshReg$(_c, \"EmailValidation\");","map":{"version":3,"names":["React","useRef","useState","useNavigate","jsxDEV","_jsxDEV","EmailValidation","_s","error","setError","navigate","handleClick","e","preventDefault","username","usernameRef","current","value","password","passwordRef","length","children","id","fileName","_jsxFileName","lineNumber","columnNumber","className","type","name","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/peri1/Documents/GitHub/Cyber-tilt-tool/frontend/src/EmailValidation.js"],"sourcesContent":["import React, {useRef, useState} from 'react'\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nexport default function EmailValidation() {\r\n    const [error = \"\", setError] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    function handleClick(e){\r\n        e.preventDefault();\r\n        let username = usernameRef.current.value;\r\n        let password = passwordRef.current.value;\r\n\r\n        if (username === \"\" || password === \"\")\r\n        {\r\n            if(username === \"\")\r\n            {\r\n                setError('Please Enter a Username');\r\n            }\r\n            else\r\n            {\r\n                setError('Please Enter a Password');\r\n            }\r\n        }\r\n        else if (password.length < 10)\r\n        {\r\n            setError('Please write a password with 10 letter or more');\r\n        }\r\n        else\r\n        {\r\n            // check the user in the db if exist do and write what if not\r\n            setError('');\r\n            navigate('/reports');\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form id=\"emailValidationpanel\">\r\n                <h1 id=\"litheader\">Email Validation</h1>\r\n                <div className=\"inset\">\r\n                    <p>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            placeholder=\"Email\"\r\n                        />\r\n                    </p>\r\n                </div>\r\n                <div className=\"p-container\" id=\"emailValidationError\">{error}</div>\r\n                <p className=\"p-container\" id=\"button\">\r\n                    <button onClick={handleClick}>Get Email</button>\r\n                </p>\r\n            </form>\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAC7C,SAAQC,WAAW,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,KAAK,GAAG,EAAE,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAMQ,QAAQ,GAAGP,WAAW,EAAE;EAE9B,SAASQ,WAAWA,CAACC,CAAC,EAAC;IACnBA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAIC,QAAQ,GAAGC,WAAW,CAACC,OAAO,CAACC,KAAK;IACxC,IAAIC,QAAQ,GAAGC,WAAW,CAACH,OAAO,CAACC,KAAK;IAExC,IAAIH,QAAQ,KAAK,EAAE,IAAII,QAAQ,KAAK,EAAE,EACtC;MACI,IAAGJ,QAAQ,KAAK,EAAE,EAClB;QACIL,QAAQ,CAAC,yBAAyB,CAAC;MACvC,CAAC,MAED;QACIA,QAAQ,CAAC,yBAAyB,CAAC;MACvC;IACJ,CAAC,MACI,IAAIS,QAAQ,CAACE,MAAM,GAAG,EAAE,EAC7B;MACIX,QAAQ,CAAC,gDAAgD,CAAC;IAC9D,CAAC,MAED;MACI;MACAA,QAAQ,CAAC,EAAE,CAAC;MACZC,QAAQ,CAAC,UAAU,CAAC;IACxB;EACJ;EAGA,oBACIL,OAAA;IAAAgB,QAAA,eACIhB,OAAA;MAAMiB,EAAE,EAAC,sBAAsB;MAAAD,QAAA,gBAC3BhB,OAAA;QAAIiB,EAAE,EAAC,WAAW;QAAAD,QAAA,EAAC;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACxCrB,OAAA;QAAKsB,SAAS,EAAC,OAAO;QAAAN,QAAA,eAClBhB,OAAA;UAAAgB,QAAA,eACIhB,OAAA;YACIuB,IAAI,EAAC,MAAM;YACXC,IAAI,EAAC,OAAO;YACZP,EAAE,EAAC,OAAO;YACVQ,WAAW,EAAC;UAAO;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACrB;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACF,eACNrB,OAAA;QAAKsB,SAAS,EAAC,aAAa;QAACL,EAAE,EAAC,sBAAsB;QAAAD,QAAA,EAAEb;MAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eACpErB,OAAA;QAAGsB,SAAS,EAAC,aAAa;QAACL,EAAE,EAAC,QAAQ;QAAAD,QAAA,eAClChB,OAAA;UAAQ0B,OAAO,EAAEpB,WAAY;UAAAU,QAAA,EAAC;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAS;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAChD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEd;AAACnB,EAAA,CAtDuBD,eAAe;EAAA,QAElBH,WAAW;AAAA;AAAA6B,EAAA,GAFR1B,eAAe;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}